<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on francojc ⟲</title>
    <link>https://francojc.github.io/tags/database/</link>
    <description>Recent content in database on francojc ⟲</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Jerid Francom</copyright>
    <lastBuildDate>Mon, 23 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://francojc.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Acquiring data for language research (2/3): package interfaces</title>
      <link>https://francojc.github.io/2017/10/23/acquiring-data-for-language-research-package-interfaces/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://francojc.github.io/2017/10/23/acquiring-data-for-language-research-package-interfaces/</guid>
      <description>Package interfaces A convenient alternative method for acquiring data in R is through package interfaces to web services. These interfaces are built using R code to make connections with resources on the web through Automatic Programming Interfaces (APIs). Websites such as Project Gutenberg, Twitter, Facebook, and many others provide APIs to allow access to their data under certain conditions, some more limiting for data collection than others. Programmers (like you!</description>
    </item>
    
    <item>
      <title>Create an SSH tunnel for a remote MySQL database</title>
      <link>https://francojc.github.io/2011/08/26/create-an-ssh-tunnel-for-a-remote-mysql-database/</link>
      <pubDate>Fri, 26 Aug 2011 00:00:00 +0000</pubDate>
      
      <guid>https://francojc.github.io/2011/08/26/create-an-ssh-tunnel-for-a-remote-mysql-database/</guid>
      <description>his isn&amp;rsquo;t that hard to find out on the Internets, but I want to document a couple tips that I find useful once you create an SSH Tunnel to your remote MySQL database. After you create the tunnel, you will be able to interact with the database as if it were on your local machine, which simplifies running SQL scripts.
 Create an SSH Tunnel
First open a command-line interface and enter:</description>
    </item>
    
  </channel>
</rss>