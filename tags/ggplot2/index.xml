<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ggplot2 on francojc ⟲</title>
    <link>https://francojc.github.io/tags/ggplot2/</link>
    <description>Recent content in Ggplot2 on francojc ⟲</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Jerid Francom</copyright>
    <lastBuildDate>Fri, 01 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://francojc.github.io/tags/ggplot2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Curate language data (1/2): organizing meta-data</title>
      <link>https://francojc.github.io/2017/12/01/curate-language-data-organizing-meta-data/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://francojc.github.io/2017/12/01/curate-language-data-organizing-meta-data/</guid>
      <description>When working with raw data, whether is comes from a corpus repository, web download, or a web scrape, it is important to recognize that the attributes that we want to organize can be stored or represented in various formats. The three I will cover here have to do with meta-data that is: (1) contained in the file name of a set of corpus files, (2) embedded in the corpus documents inline with the corpus text, and (3) stored separate from the the text data.</description>
    </item>
    
    <item>
      <title>Creating hexbin plots</title>
      <link>https://francojc.github.io/2015/08/12/creating-hexbin-plots/</link>
      <pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://francojc.github.io/2015/08/12/creating-hexbin-plots/</guid>
      <description>I was just browsing the web today and stumbled on an overview of data visualization in R. As I was scrolling the page something caught my eye: a hexbin plot. I had never heard of such a plot before.
To create a hexbin plot in base R with plot() you need to install the hexbin package.
install.packages(&amp;quot;hexbin&amp;quot;) Then you can load the library and create your hexbin object setting x and y.</description>
    </item>
    
  </channel>
</rss>